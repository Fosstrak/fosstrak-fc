       ------
                                    Logical Reader Management
                                    ------
                                    ------


Logical Reader Management

* Objective

	The Accada Filtering and Collection middleware provides an abstraction from the 
	physical reader devices. The Logical Reader Management is an interface through which 
	clients may define logical reader names for use with the Reading API, which maps 
	to one or more sources/actuators provided by the implementation.
	This guide should give you a brief overview of the Logical Reader Manager which 
	manages the list of Logical Readers which are part of a current setting.


* Organisation
	
	The Logical Reader Manager has the current list of all Logical Readers
	which are present in the current setting.
	The Logical Reader Manager is initialized by placing a .xml file in the
	/resource folder. There are some default .xml files already in the /resource 
	folder which you can use to gain experience with this implementation. 
	When initialized, the setting of a Logical Reader can
	be changed at any time. Logical Readers can be added and deleted. It is also 
	possible to store the current setting to a .xml file, so that in case of a 
	failure, the previous setting can be retained at any time. 

* Implementation

	The whole functionality is in a single class: LogicalReaderManager.java.
	The most functionality is contained in the methods described below. Most of the
	other methods are delegated using reflection to the specializations of a Logical
	Reader. Please refer to the logical-reader-api for more information about the logical 
	readers functionality.

	* initializeFromFile(String loadFilePath): using the JAXB framework the specified .xml
	file is parsed and Java Objects are generated. Once generated the Logical Reader Manager
	has a HashMap of all Logical Readers of the current setting. 
	
	* storeToFile(String storeFilePath): using the JAXB framework the specified .xml file
	is generated from the current HashMap of the LogicalReaderManager. This method allows
	a ALE user to hold a backup configuration for recovery. Note that the configuration 
	can be changed significantly during the operation of the ALE since the Logical Reader
	Manager allows a user to change the HashMap of the Logical Readers using the methods
	addReaders(String name, java.util.List<String> readers) and
	removeReaders(String name, java.util.List<String> readers).
	
	* undefine(String name): removes the logical reader 
	
	* update(String name, LRSpec spec): changes the LRSpec of the given reader
	
	* define(String name, org.accada.ale.server.readers.gen.LRSpec spec): creates a logical 
	reader from the loaded .xml file.
	
	* define(String name, LRSpec spec): creates a logical reader after initialisation.
	
	* setLogicalReader(LogicalReader reader): adds the logical reader to the list of logical 
	readers.
	
	
	[]